<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- 1、配置加载数据源参数文件； -->
    <context:property-placeholder location="classpath:mysql.properties" />
    <!-- 2、配置数据源连接池 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}"></property>
        <property name="url" value="${jdbc.url}"></property>
        <property name="username" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>
    <!-- 3、配置sessionFactoryBean -->
    <bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--内置数据源连接-->
        <property name="dataSource" ref="dataSource"></property>
        <!--内置mapper文件-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"></property>
        <!--简化bean的名称-->
        <property name="typeAliasesPackage" value="pojo"></property>
        <!--分页插件mybatis_config.xml-->
        <property name="configLocation" value="classpath:mybatis_config.xml"></property>
    </bean>

    <!-- 4、配置mybatis接口扫描器,扫描dao -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--DAO-->
        <property name="basePackage" value="dao"></property>
        <!--mapper-->
        <property name="sqlSessionFactoryBeanName" value="sessionFactory"></property>
    </bean>

    <!-- 5、配置事务管理器 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!-- 6、注解配置事务扩散机制 -->
    <tx:annotation-driven transaction-manager="transactionManager" />
    <!-- 6、xml配置事务扩散(传播)机制 -->
    <!--<tx:advice id="txAdvice" transaction-manager="transactionManager">-->
    <!--<tx:attributes >-->
    <!--<tx:method name="delete*" propagation="REQUIRED" />-->
    <!--<tx:method name="insert*" propagation="REQUIRED" />-->
    <!--<tx:method name="update*" propagation="REQUIRED" />-->
    <!--<tx:method name="*" propagation="SUPPORTS" read-only="true"/>-->
    <!--</tx:attributes>-->
    <!--</tx:advice>-->
    <!--<aop:config>-->
    <!--<aop:pointcut expression="execution(* service.*.*.*(..))" id="serviceCutPoint"/>-->
    <!--<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceCutPoint"/>-->
    <!--</aop:config>-->
</beans>